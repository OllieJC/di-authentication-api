name: Pre-merge checks
on:
  pull_request:
    types:
      - opened
      - reopened
      - ready_for_review
      - synchronize

jobs:
  style-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Spotless
        run: ./gradlew --no-daemon spotlessCheck

  run-tests:
    runs-on: ubuntu-latest
    services:
      localstack:
        image: localstack/localstack:0.12.20
        env:
          SERVICES: "lambda, apigateway, iam, ec2, sqs, s3, sts, kms, sns, ssm"
          EDGE_PORT: "45678"
          EXTERNAL_HOSTNAME: localhost
          DEFAULT_REGION: eu-west-2
          TEST_AWS_ACCOUNT_ID: 123456789012
          KMS_PROVIDER: local-kms
        options: >-
          --add-host "notify.internal:host-gateway"
        ports:
          - 45678:45678
      redis:
        image: redis:6.0.5-alpine
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379
      dynamodb:
        image: amazon/dynamodb-local:latest
        options: >-
          --health-cmd "curl http://localhost:8000"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 8000:8000
    steps:
      - name: Check out repository code
        uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
      - name: Cache Gradle packages
        uses: actions/cache@v2
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
      - name: Run Unit Tests
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew --parallel test -x integration-tests:test jacocoTestReport -x account-management-integration-tests:test -x spotlessApply -x spotlessCheck
      - name: Run Integration Tests
        run: |
          ./gradlew :integration-tests:test jacocoTestReport -x composeUp
      - name: Upload Integration Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: integration-test-reports
          path: integration-tests/build/reports/tests/test/
          retention-days: 5
      - name: Run Account Management Integration Tests
        run: |
          ./gradlew :account-management-integration-tests:test jacocoTestReport -x composeUp
      - name: Upload Account Management Integration Test Reports
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: account-management-integration-test-reports
          path: account-management-integration-tests/build/reports/tests/test/
          retention-days: 5
      - name: Run SonarCloud Analysis
        if: ${{ github.actor != 'dependabot[bot]' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew --parallel sonarqube -x test -x spotlessApply -x spotlessCheck
      - name: Upload Docker Container Logs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: docker-container-logs
          path: logs/
          retention-days: 5

