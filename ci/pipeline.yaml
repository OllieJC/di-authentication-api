resources:
  - name: di-authentication-api
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/di-authentication-api.git
      ignore_paths:
        - ci/pipeline.yaml
      branch: main

  - name: pipeline-src
    type: git
    icon: github
    source:
      uri: https://github.com/alphagov/di-authentication-api.git
      paths:
        - ci/pipeline.yaml
      branch: main

jobs:
  - name: update-pipeline
    plan:
      - get: pipeline-src
        trigger: true
      - set_pipeline: di-authentication-api
        file: pipeline-src/ci/pipeline.yaml

  - name: deploy-lambda
    plan:
      - get: di-authentication-api
        trigger: true
      - task: build
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: gradle
              tag: 7.0.2-jdk11
          inputs:
            - name: di-authentication-api
          outputs:
            - name: lambda-zip
          run:
            path: /bin/bash
            args:
              - -euc
              - |
                cd di-authentication-api
                gradle --no-daemon :serverless:lambda:buildZip
                cp serverless/lambda/build/distributions/lambda.zip ../lambda-zip/
      - task: terraform-plan
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: hashicorp/terraform
              tag: 0.14.10
          params:
            DEPLOYER_ROLE_ARN: ((deployer-role-arn))
            BUILD_NOTIFY_API_KEY: ((build-notify-api-key))
          inputs:
            - name: lambda-zip
            - name: di-authentication-api
          outputs:
            - name: terraform-plan
          run:
            path: /bin/sh
            args:
              - -euc
              - |
                cd di-authentication-api/ci/terraform/aws
                terraform init -input=false -backend-config "role_arn=${DEPLOYER_ROLE_ARN}"
                terraform plan \
                  -var 'lambda_zip_file=../../../../lambda-zip/lambda.zip' \
                  -var "deployer_role_arn=${DEPLOYER_ROLE_ARN}" \
                  -var "notify_api_key=${BUILD_NOTIFY_API_KEY}" \
                  -out=../../../../terraform-plan/terraform.plan

      - task: terraform-apply
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: hashicorp/terraform
              tag: 0.14.10
          params:
            DEPLOYER_ROLE_ARN: ((deployer-role-arn))
          inputs:
            - name: lambda-zip
            - name: di-authentication-api
            - name: terraform-plan
          run:
            path: /bin/sh
            args:
              - -euc
              - |
                cd di-authentication-api/ci/terraform/aws
                terraform init -input=false -backend-config "role_arn=${DEPLOYER_ROLE_ARN}"
                terraform apply -auto-approve ../../../../terraform-plan/terraform.plan

  - name: integration-tests
    plan:
      - get: di-authentication-api
        passed: [deploy-lambda]
        trigger: true
      - task: read-terraform-outputs
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: hashicorp/terraform
              tag: 0.14.10
          params:
            DEPLOYER_ROLE_ARN: ((deployer-role-arn))
          inputs:
            - name: di-authentication-api
          outputs:
            - name: terraform-outputs
          run:
            path: /bin/sh
            args:
              - -euc
              - |
                cd di-authentication-api/ci/terraform/aws
                terraform init -input=false -backend-config "role_arn=${DEPLOYER_ROLE_ARN}"
                terraform output -raw token_url > ../../../../terraform-outputs/token_url.txt
      - task: test
        config:
          platform: linux
          image_resource:
            type: registry-image
            source:
              repository: gradle
              tag: 7.0.2-jdk11
          inputs:
            - name: di-authentication-api
            - name: terraform-outputs
          run:
            path: /bin/bash
            args:
              - -euc
              - |
                export ROOT_RESOURCE_URL=$(< terraform-outputs/token_url.txt)
                cd di-authentication-api
                gradle --no-daemon integration-tests:test
